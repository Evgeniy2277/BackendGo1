openapi: 3.0.1
info:
  title: Shop
  version: 1.0.0
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email: 
          type: string
        password:
          type: string
    Item:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        price:
          type: integer # чтобы не потерять точность, денежные поля мы будем передавать
          format: int64 # в виде целочисленного значения минимальной размерности валюты (например, центы или копейк)
        image_link:
          type: string
    Order:
      type: object
      properties:
        id: 
          type: integer
          format: int64
        userId:
          type: integer
          format: int64   
        itemId:
          type: integer
          format: int64
        count:
          type: integer
          format: int64 
        itemPrice:
          type: integer
          format: int64 
        summa: 
          type: integer
          format: int64            
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
paths:
  /user/login:
    post:
      operationId: loginUser
      parameters:
      - name: username
        in: query
        description: The user name for login
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful operation
          headers:
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
          content: {}
  /user/logout:
    post:
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        '200':
          description: successful logout
          content: {}
  /items:
    post:
      summary: Add a new item to the store
      operationId: CreateItem
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: body
          in: query
          description: Item object that needs to be added to the store
          required: true
          schema:
            $ref: '#/components/schemas/Item'
      responses:
        '405':
          description: Invalid input
      security:
        - api_key: []
    get:
      summary: Lists Items with filters
      operationId: ListItems
      parameters:
        - name: price_min
          in: query
          description: Lower price limit
          required: false
          schema:
            type: integer
            format: int64
        - name: price_max
          in: query
          description: Upper price limit
          required: false
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
        '400':
          description: Invalid price range
          content: {}  
  /items/upload_image:
    post:
      summary: uploads an image
      operationId: uploadFile
      parameters:
        consumes:
        - "multipart/form-data"
        produces:
        - "application/json"
        - name: additionalMetadata
          in: formData
          description: Additional data to pass to server
          required: true
          schema:
            type: string
            format: int64
        - name: file
          in: formData
          description: file to upload
          required: true
          schema:
            type: file
      responses:
        '200':
          description: successful operation
      security:
        - api_key: []
  /items/{itemId}:
    get:
      summary: Find item by ID
      operationId: GetItem
      parameters:
        - name: itemId
          in: path
          description: ID of item to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '400':
          description: Invalid ID supplied
          content: {}
    put:
      summary: Updates a item in the store with form data
      operationId: UpdateItem
      parameters:
        - name: itemId
          in: path
          description: ID of item that needs to be updated
          required: true
          schema: 
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  description: Updated name of the item
                status:
                  type: string
                  description: Updated status of the item
      responses:
        '405':
          description: Invalid input
          content: {}
      security:
        - api_key: []
    delete:
      summary: Deletes a item
      operationId: DeleteItem
      parameters:
        - name: itemId
          in: path
          description: Item id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Item not found
          content: {}
      security:
        - api_key: []
  /orders:
    post:
      summary: Place an order
      description: Add a new order to the store
      operationId: placeOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '405':
          description: Validation exception
      security:
        - api_key: []
  /orders/{orderId}:
    get:
      summary: Find purchase order by ID
      description: For valid response try integer IDs with value <= 5 or > 10. Other values will generate exceptions.
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          description: ID of order that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
      security:
        - api_key: []
    patch:
      summary: Update an order
      description: Update  order to the store
      operationId: updateOrder
      parameters:
        - name: orderId
          in: path
          description: ID of order that needs to be update
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '405':
          description: Validation exception
      security:
        - api_key: []
    delete:
      summary: Delete purchase order by ID
      description: Delete order
      operationId: DeleteOrder
      parameters:
        - name: orderId
          in: path
          required: true
          schema: 
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
      security:
        - api_key: []